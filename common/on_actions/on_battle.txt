# country
# root = winning country, from = loser country
on_battle_won_country = {
	on_battle_ended_effect = yes
	on_battle_won_country_effect = yes
	if = {
		limit = {
			ROOT = {
				tag = ALB
				NOT = { has_country_flag = albanian_victory }
			}
			FROM = {
				tag = TUR
			}
		}
		ROOT = { set_country_flag = albanian_victory }
	}
	count_won_battles_and_reward_at_end = {
		counting_flag = teu_crusader_battle_counter
		max_value = 20
		effect = "
			country_event = {
				id = flavor_teu.12
			}
		"
	}
	count_won_battles_and_reward_at_end = {
		counting_flag = has_rus_kill_counter
		max_value = 40
		effect = "set_country_flag = rus_finished_kill_mission"
	}

	# Europa Expanded
	change_variable = {
		which = num_of_battles_won_var
		value = 1
	}
	if = {
		limit = {
			has_country_modifier = MSY_the_end_is_nigh
		}
		add_disaster_progress = {
			disaster = ME_the_end_of_times
			value = -0.5
		}
	}
	if = {
		limit = {
			has_country_flag = ME_can_use_timurid_legitimacy
		}
		change_variable = {
			which = timurid_legitimacy_value
			value = 2
		}
	}
	if = {
		limit = {
			OR = {
				AND = {
					mission_completed = TIM_every_corner
					mission_completed = TIM_elephants_for_governors
				}
				AND = {
					overlord = {
						mission_completed = TIM_every_corner
						mission_completed = TIM_elephants_for_governors
					}
				}
			}
		}
		change_variable = {
			which = METimBattlesWonFinal
			value = 1
		}
	}
	if = {
		limit = {
			mission_completed = TIM_conquerors_legacy
			NOT = { mission_completed = TIM_emperors_guard }
		}
		change_variable = {
			which = ME_tim_emperors_guard_counter
			value = 1
		}
	}
	if = {
		limit = {
			has_government_mechanic = conquest_frenzy
			NOT = { has_country_flag = ME_tim_battle_tendency_mission_flag }
		}
		add_government_power = { 
           		 mechanic_type = conquest_frenzy
           		 power_type = conquest_frenzy_power
          		  value = 1
       		 }
	}
	else_if = {
		limit = {
			has_government_mechanic = conquest_frenzy
			has_country_flag = ME_tim_battle_tendency_mission_flag
		}
		ME_tim_add_spoils_of_war = { add = 2 }
	}

	if = {
		limit = {
			mission_completed = ME_tim_army_with_a_state
		}
		add_government_power = {
			mechanic_type = timurid_militarization
			power_type = timurid_stratocracy_power
			value = 2
		}
	}

	if = {
		limit = {
			mission_completed = ME_tim_army_professionalism
		}
		add_army_professionalism = 0.002
	}
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	on_battle_ended_effect = yes
	battle_cult_spreading_effect = yes #Scripted effect for fetishist cult mechanics.
	random_events = {
		90 = 0
		10 = friendship_events.1 #Historical Friendship Broken
	}
}

# province
# root = location, from = loser country
on_battle_won_province = {
	#if = {
	#	limit = {
	#		from = { tag = REB }
	#		owner = {
	#			tag = ENG
	#			has_disaster = war_of_the_roses
	#			has_country_modifier = wotr_one_year_timer
	#			NOT = { has_country_flag = war_of_the_roses_pretender_fled }
	#		}
	#	}
	#	owner = { country_event = { id = war_of_the_roses.200 days = 2 } }
	#}
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = revolutionary_rebels
			}
			owner = {
				any_owned_province = {
					region = root
					has_revolution_in_province = yes
				}
				NOT = { has_disaster = french_revolution }
				NOT = { has_disaster = revolution }
				NOT = { has_spawned_rebels = revolutionary_rebels }
			}
		}
		owner = { country_event = { id = center_of_revolution.1600 } }
	}
	if = { 
		limit = { 
			FROM = { tag = REB }
			owner = { 
				has_country_flag = eunuch_estate_in_power 
				is_emperor_of_china = yes 
				has_dlc = "Mandate of Heaven" 
			} 
		}
		owner = { add_mandate = -10 }
	}
	random_events = {
		1000 = 0
		#100 = war_of_the_roses.6	# WotR - Rebel Leaders Captured
	}
}

# province
# root = location, from = winner country
on_battle_lost_province = {
	on_battle_won_unit_effect = yes
	random_events = {
		1000 = 0
		100 = tyw_events.22	# Capital Battle in Religious War
	}

	FROM = {
		if = {
			limit = {
				ROOT = {
					num_of_units_in_province = {
						amount = 100
					}
				}
			}
			add_army_professionalism = 0.001
			log = "DEV: Professionalism T1 Stonks"
		}
	}
	FROM = {
		if = {
			limit = {
				ROOT = {
					num_of_units_in_province = {
						amount = 250
					}
				}
			}
			add_army_professionalism = 0.005
			log = "DEV: Professionalism T2 Stonks"
		}
	}
	FROM = {
		if = {
			limit = {
				ROOT = {
					num_of_units_in_province = {
						amount = 500
					}
				}
			}
			add_army_professionalism = 0.01
			log = "DEV: Professionalism T3 Stonks"
		}
	}

}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	on_battle_won_unit_effect = yes
	if = {
		limit = {
			unit_owner = { ai = no } #Scopes to Unit Owner from Unit Scope
			general_with_steam_name = yes #Unit Scope Trigger
		}
		unit_owner = { set_country_flag = general_with_steam_name_won_battle }
	}
	if = {
		limit = {
			general_with_name = "Damarwulan"
			unit_owner = {
				has_country_flag = maj_damarwulan
			}
		}
		unit_owner = {
			change_variable = {
				which = DamarwulanWinVariable 
				value = 1
			}
		}
	}
	if = {
		limit = {
			general_with_name = "Damarwulan"
			unit_owner = {
				check_variable = {
					which = DamarwulanWinVariable
					value = 5
				}
			}
		}
		unit_owner = {
			country_event = { id = majapahit.2 days = 2 }
		}
	}
	if = {
		limit = {
			unit_owner = {
				mission_completed = son_military_expertise
				NOT = { mission_completed = son_win_battles }
			}
		}
		unit_owner = {
			change_variable = {
				which = son_fight_counter
				value = 1
			}
		}
		if = {
			limit = {
				is_ruler_commanding_unit = yes
			}
			unit_owner = {
				change_variable = {
					which = son_fight_counter
					value = 1
				}
			}
		}
	}
	if = {
		limit = {
			unit_owner = {
				has_government_attribute = winning_battles_increases_legitimacy
			}
			is_ruler_commanding_unit = yes
		}
		unit_owner = {
			add_legitimacy = 0.5
			add_devotion = 0.5
			add_republican_tradition = 0.1
			add_revolutionary_zeal_or_absolutism = { amount = 0.1 }
		}
	}
	if = {
		limit = {
			general_with_name = "Jean Bureau"
		}
		unit_owner = {
			change_variable = {
				which = jean_bureau_battles_won 
				value = 1
			}
		}
	}
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	on_battle_lost_unit_effect = yes
    if = {
        limit = {
            unit_owner = {
                tag = MNG
                has_ruler_flag = mng_militry_incompetence
            }
            is_ruler_commanding_unit = yes
			enemy_unit = {
				unit_owner = {
					tag = OIR
				}
			}
        }
        OIR = {
            country_event = { id = flavor_oir.2 }
        }
    }
}